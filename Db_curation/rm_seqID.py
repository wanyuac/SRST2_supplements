'''
This script removes seqIDs and other stuff followed it from the compiled result of SRST2 (https://github.com/katholt/srst2).

Usage: python rm_seqID.py <input file>

Input: a compiled tab-deliminated file generated by SRST2 using the command: python srst2.py --prev_output *__genes*results.txt --output <prefix>
Output: the output file will be generated in the same directory as the input file.

Author: Yu Wan (wanyuac@gmail.com, GitHub: https://github.com/wanyuac)
First edition: 2 July 2015
Last edition: 2 July 2015

License: GNU GPL 2.1
'''

import sys

SEP = '_'  # the separator character
SUFFIX = '__noSeqID.tsv'  # the name suffix of the output file

def set_output(filename):
	return (filename[ : -4] + SUFFIX)  # remove '.txt' from the input file name and add SUFFIX to it

def remove_seqID(line):
	# remove seqIDs from a row of the input file
	s = [line[0]]  # The first element is the sample name, which should not be changed.
	for i in range(1, len(line)):  # for every element in the list "line"
		s.append(line[i].split(SEP)[0])  # take the first element from the result list
	return s

def main():
	if len(sys.argv) == 1:
		print 'Error: no argument is available.'
		sys.exit(1)
	else:
		file = sys.argv[1]  # get the input file name
		output = set_output(file)  # set the name of the output file
		input_file = open(file, 'rU')
		output_file = open(output, 'w')
		c = 1  # the count of lines
		for line in input_file:
			line = line.rstrip('\n')  # Remove the new line character from every line. This is important for lines with the last element != "-".
			if c > 1 and line != '\n':  # the first and last line will not be changed
				line = '\t'.join(remove_seqID(line.split('\t')))  # split this line into a list of strings by the tab character
			output_file.write(line + '\n')
			c += 1
		input_file.close()
		output_file.close()
		print '%d lines were processed successfully. Done.' % (c - 1)
		print 'The output has been saved to %s' % output
	
# The main program
if __name__ == "__main__":
    main()